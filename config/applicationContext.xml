<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://www.springframework.org/schema/beans" 
		 xmlns:aop="http://www.springframework.org/schema/aop" 
		 xmlns:context="http://www.springframework.org/schema/context" 
		 xmlns:tx="http://www.springframework.org/schema/tx" 
		 xsi:schemaLocation="http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
		
	<!-- 读取db.properties -->
		<context:property-placeholder location="classpath:db.properties"/>
		
	<!-- 整合c3p0到spring中-->	
      <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
          <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
          <property name="driverClass" value="${jdbc.driverClass}"></property>
          <property name="user" value="${jdbc.user}"></property>
          <property name="password" value="${jdbc.password}"></property>
      </bean>	
      
       
	<!--在spring配置中配置hibernate配置-->
	  <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	     <!-- 将c3p0注入到sessionFactory -->
	     <property name="dataSource" ref="dataSource"></property>
	     <property name="hibernateProperties">
	       <props>
	          <!-- 选择数据库方言 -->
	          <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
	          
	         
	          <prop key="hibernate.show_sql">true</prop>
	          <prop key="hibernate.format_sql">true</prop>
	          <prop key="hibernate.hbm2ddl.auto">update</prop>
	       </props>
	     </property>
	     
	     <!--引入orm元数据，给定包路径，spring自动加载下面所有配置  -->
	     <property name="mappingDirectoryLocations" value="classpath:com/yuantu/entity"></property>
	  </bean>	
   
   <!--配置核心事务管理器  -->		
   <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <!--注入依赖  连接池-->
      <property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <!-- 配置事务通知 -->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
     <tx:attributes>
      <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
      <tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
      <tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
      <tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
      <tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
      <tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
      <tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="true"/>
      <tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="true"/>
     </tx:attributes>
   </tx:advice>
   
   <!--配置织入  -->
   <aop:config>
     <!-- 配置切点 -->
     <aop:pointcut expression="execution(* com.yuantu.service.impl.*ServiceImpl.*(..))" id="txPc"/>
     <!-- 配置切面 通知+切点 
         advice-ref:通知名
         pointcut-ref：切点名
      -->
     <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
   </aop:config>
		
	
	
	  
    
   <!-- action -->
   <!--在配置action的，它的作用域一定是多例  -->
     <bean name="forgotAction" class="com.yuantu.web.action.ForgotAction"  scope="prototype">
    <property name="fs" ref="forgotService"></property>
    </bean>
   
    <bean name="applyAction" class="com.yuantu.web.action.ApplyAction"  scope="prototype">
    <property name="as" ref="applyService"></property>
    </bean>
   
    <bean name="baseDictAction" class="com.yuantu.web.action.BaseDictAction"  scope="prototype">
    <property name="bds" ref="baseDictService"></property>
    </bean>
   
    <bean name="userAction" class="com.yuantu.web.action.UserAction"  scope="prototype">
    <property name="us" ref="userService"></property>
   </bean>
   
  
    
    <!--配置service  -->
    <bean name="forgotService" class="com.yuantu.service.impl.ForgotServiceImpl">
    <property name="fd" ref="forgotDao"></property>
   </bean>
    
    <bean name="applyService" class="com.yuantu.service.impl.ApplyServiceImpl">
    <property name="ad" ref="applyDao"></property>
   </bean>
      
    <bean name="baseDictService" class="com.yuantu.service.impl.BaseDictServiceImpl">
    <property name="bdd" ref="baseDictDao"></property>
   </bean>
   
    <bean name="userService" class="com.yuantu.service.impl.UserServiceImpl">
    <property name="ud" ref="userDao"></property>
   </bean>
   
   
   <!--配置dao  -->
    <bean name="forgotDao" class="com.yuantu.dao.impl.ForgotDaoImpl">
     <!--注入sessionFactory  -->
     <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
    <bean name="applyDao" class="com.yuantu.dao.impl.ApplyDaoImpl">
     <!--注入sessionFactory  -->
     <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
    <bean name="baseDictDao" class="com.yuantu.dao.impl.BaseDictDaoImpl">
     <!--注入sessionFactory  -->
     <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
   <bean name="userDao" class="com.yuantu.dao.impl.UserDaoImpl">
     <!--注入sessionFactory  -->
     <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
 </beans>